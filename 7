def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var34 = func7()
    var57 = func8(arg2, var34)
    var62 = func11(var34, var33)
    var66 = func12(var57, arg2)
    var67 = -103 + var33 - -142
    var68 = arg2 - -294 + (var57 ^ 2064983795)
    var69 = (var57 + var67) + (arg1 - var57)
    var70 = var34 - 490 ^ var62 & var33
    if var66 < var33:
        var71 = 718 + var69
    else:
        var71 = var62 ^ var34 & arg1 - 1187900982
    var72 = var66 - arg2
    var73 = (var57 - var66) + var69
    var74 = var72 + (var73 - var34 & var62)
    var75 = var72 - (var69 + (-523 - var67))
    var76 = (var74 ^ var72 & var69) - var68
    var77 = arg2 + var75 + var73 | var69
    var78 = var68 & (var76 & 1917463999 | var75)
    var79 = var66 + arg1
    var80 = (var77 - var75) | var57 | 1788873333
    var81 = (var78 | 18216480) ^ var70 & var34
    var82 = arg2 - var69
    var83 = var81 - var68
    var84 = var72 ^ ((var69 | var82) ^ var79)
    var85 = var74 & (arg1 ^ arg1) & var69
    result = var80 | var82
    return result
def func12(arg63, arg64):
    var65 = 1857087469 ^ -2087536741 + (813 ^ arg63 & arg64)
    result = (-195 & (arg64 & arg63 | arg63) - (arg64 | var65) ^ arg63 ^ (var65 ^ 1055180672) | arg63 & 528) | -491659682
    return result
def func11(arg58, arg59):
    var60 = 0
    for var61 in range(27):
        var60 += var60 + 3 - arg58
    return var60
def func10(arg37, arg38):
    var39 = 2050293040 & ((arg37 | -1000) & 69175346)
    var40 = (var39 + arg38 | arg38) + arg38
    var41 = (1841286099 & var39 + var40) - -967
    var42 = var40 + arg37 + var41 | 283158509
    var43 = -1428131787 ^ (-887579024 | (arg37 & 884))
    var44 = (arg38 ^ arg38 ^ var39) + var43
    var45 = (1741591133 & arg37 ^ -295) | -1262824473
    var46 = var39 & var45
    var47 = var41 + var43 | var40 + arg37
    var48 = var47 & var39 + var45 & arg37
    var49 = var41 | var41
    var50 = var43 ^ (var44 & var48 + var41)
    if var50 < var42:
        var51 = var41 & arg38 + (var46 ^ var46)
    else:
        var51 = 510 + var44 - (var50 | 517226919)
    var52 = (var40 ^ arg38 + var44) & var49
    var53 = var39 ^ var46
    var54 = var45 - var39
    var55 = var41 ^ var46 & 1608871408 | var47
    result = var50 - var54
    return result
def func7():
    func5()
    result = len(xrange(22))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -9
def func4(arg6, arg7):
    var8 = ((arg6 + -5) & arg6) - arg6
    var9 = ((var8 | 153) + -214990880) & arg6
    var10 = arg7 ^ -323 | arg7
    var11 = arg7 ^ var10
    var12 = (-580 | var10) & 886 | arg7
    if arg6 < var11:
        var13 = 231 & (-755268339 ^ var9) & -312
    else:
        var13 = arg7 ^ -953
    var14 = arg7 + arg6 & var10
    var15 = var10 & var9 ^ (-889714961 + var9)
    var16 = -594311414 - var10 + arg6 & var14
    var17 = arg7 ^ arg7 | arg6 - var14
    var18 = var12 - var15
    if var17 < var14:
        var19 = var14 + 1689846104
    else:
        var19 = ((var18 | arg7) & var18) | arg6
    var20 = var15 + 171
    var21 = (var18 & (var11 & var17)) | var20
    var22 = var14 | (arg7 + var17)
    var23 = var21 | (var8 ^ var15 | var15)
    var24 = (var8 + var21 - var10) & var17
    var25 = var23 & 399 - var16 + arg7
    var26 = (var11 - var14) + var8
    var27 = var15 ^ var14
    if var12 < var27:
        var28 = (var18 | (arg7 ^ var10)) | 341
    else:
        var28 = (var21 & var10) - 198
    var29 = arg7 & var21 & var24
    var30 = ((var21 ^ var20) - var20) | var15
    var31 = var24 ^ var21
    var32 = var22 + var26 & var14 - var15
    result = var9 - (((var18 | (((111 - var21) + var26) - var12 ^ var21) + var25 & var24) & var11) ^ var16 ^ var25)
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg35, arg36):
    def func9(acc, rest):
        var56 = func10(acc, 0)
        if acc == 0:
            return var56
        else:
            result = func9(acc - 1, var56)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var34 = func7()
    var57 = func8(arg2, var34)
    var62 = func11(var34, var33)
    var66 = func12(var57, arg2)
    var67 = -103 + var33 - -142
    var68 = arg2 - -294 + (var57 ^ 2064983795)
    var69 = (var57 + var67) + (arg1 - var57)
    var70 = var34 - 490 ^ var62 & var33
    if var66 < var33:
        var71 = 718 + var69
    else:
        var71 = var62 ^ var34 & arg1 - 1187900982
    var72 = var66 - arg2
    var73 = (var57 - var66) + var69
    var74 = var72 + (var73 - var34 & var62)
    var75 = var72 - (var69 + (-523 - var67))
    var76 = (var74 ^ var72 & var69) - var68
    var77 = arg2 + var75 + var73 | var69
    var78 = var68 & (var76 & 1917463999 | var75)
    var79 = var66 + arg1
    var80 = (var77 - var75) | var57 | 1788873333
    var81 = (var78 | 18216480) ^ var70 & var34
    var82 = arg2 - var69
    var83 = var81 - var68
    var84 = var72 ^ ((var69 | var82) ^ var79)
    var85 = var74 & (arg1 ^ arg1) & var69
    result = var80 | var82
    return result
def func12(arg63, arg64):
    var65 = 1857087469 ^ -2087536741 + (813 ^ arg63 & arg64)
    result = (-195 & (arg64 & arg63 | arg63) - (arg64 | var65) ^ arg63 ^ (var65 ^ 1055180672) | arg63 & 528) | -491659682
    return result
def func11(arg58, arg59):
    var60 = 0
    for var61 in range(27):
        var60 += var60 + 3 - arg58
    return var60
def func10(arg37, arg38):
    var39 = 2050293040 & ((arg37 | -1000) & 69175346)
    var40 = (var39 + arg38 | arg38) + arg38
    var41 = (1841286099 & var39 + var40) - -967
    var42 = var40 + arg37 + var41 | 283158509
    var43 = -1428131787 ^ (-887579024 | (arg37 & 884))
    var44 = (arg38 ^ arg38 ^ var39) + var43
    var45 = (1741591133 & arg37 ^ -295) | -1262824473
    var46 = var39 & var45
    var47 = var41 + var43 | var40 + arg37
    var48 = var47 & var39 + var45 & arg37
    var49 = var41 | var41
    var50 = var43 ^ (var44 & var48 + var41)
    if var50 < var42:
        var51 = var41 & arg38 + (var46 ^ var46)
    else:
        var51 = 510 + var44 - (var50 | 517226919)
    var52 = (var40 ^ arg38 + var44) & var49
    var53 = var39 ^ var46
    var54 = var45 - var39
    var55 = var41 ^ var46 & 1608871408 | var47
    result = var50 - var54
    return result
def func7():
    func5()
    result = len(xrange(22))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -9
def func4(arg6, arg7):
    var8 = ((arg6 + -5) & arg6) - arg6
    var9 = ((var8 | 153) + -214990880) & arg6
    var10 = arg7 ^ -323 | arg7
    var11 = arg7 ^ var10
    var12 = (-580 | var10) & 886 | arg7
    if arg6 < var11:
        var13 = 231 & (-755268339 ^ var9) & -312
    else:
        var13 = arg7 ^ -953
    var14 = arg7 + arg6 & var10
    var15 = var10 & var9 ^ (-889714961 + var9)
    var16 = -594311414 - var10 + arg6 & var14
    var17 = arg7 ^ arg7 | arg6 - var14
    var18 = var12 - var15
    if var17 < var14:
        var19 = var14 + 1689846104
    else:
        var19 = ((var18 | arg7) & var18) | arg6
    var20 = var15 + 171
    var21 = (var18 & (var11 & var17)) | var20
    var22 = var14 | (arg7 + var17)
    var23 = var21 | (var8 ^ var15 | var15)
    var24 = (var8 + var21 - var10) & var17
    var25 = var23 & 399 - var16 + arg7
    var26 = (var11 - var14) + var8
    var27 = var15 ^ var14
    if var12 < var27:
        var28 = (var18 | (arg7 ^ var10)) | 341
    else:
        var28 = (var21 & var10) - 198
    var29 = arg7 & var21 & var24
    var30 = ((var21 ^ var20) - var20) | var15
    var31 = var24 ^ var21
    var32 = var22 + var26 & var14 - var15
    result = var9 - (((var18 | (((111 - var21) + var26) - var12 ^ var21) + var25 & var24) & var11) ^ var16 ^ var25)
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg35, arg36):
    def func9(acc, rest):
        var56 = func10(acc, 0)
        if acc == 0:
            return var56
        else:
            result = func9(acc - 1, var56)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var34 = func7()
    var57 = func8(arg2, var34)
    var62 = func11(var34, var33)
    var66 = func12(var57, arg2)
    var67 = -103 + var33 - -142
    var68 = arg2 - -294 + (var57 ^ 2064983795)
    var69 = (var57 + var67) + (arg1 - var57)
    var70 = var34 - 490 ^ var62 & var33
    if var66 < var33:
        var71 = 718 + var69
    else:
        var71 = var62 ^ var34 & arg1 - 1187900982
    var72 = var66 - arg2
    var73 = (var57 - var66) + var69
    var74 = var72 + (var73 - var34 & var62)
    var75 = var72 - (var69 + (-523 - var67))
    var76 = (var74 ^ var72 & var69) - var68
    var77 = arg2 + var75 + var73 | var69
    var78 = var68 & (var76 & 1917463999 | var75)
    var79 = var66 + arg1
    var80 = (var77 - var75) | var57 | 1788873333
    var81 = (var78 | 18216480) ^ var70 & var34
    var82 = arg2 - var69
    var83 = var81 - var68
    var84 = var72 ^ ((var69 | var82) ^ var79)
    var85 = var74 & (arg1 ^ arg1) & var69
    result = var80 | var82
    return result
def func12(arg63, arg64):
    var65 = 1857087469 ^ -2087536741 + (813 ^ arg63 & arg64)
    result = (-195 & (arg64 & arg63 | arg63) - (arg64 | var65) ^ arg63 ^ (var65 ^ 1055180672) | arg63 & 528) | -491659682
    return result
def func11(arg58, arg59):
    var60 = 0
    for var61 in range(27):
        var60 += var60 + 3 - arg58
    return var60
def func10(arg37, arg38):
    var39 = 2050293040 & ((arg37 | -1000) & 69175346)
    var40 = (var39 + arg38 | arg38) + arg38
    var41 = (1841286099 & var39 + var40) - -967
    var42 = var40 + arg37 + var41 | 283158509
    var43 = -1428131787 ^ (-887579024 | (arg37 & 884))
    var44 = (arg38 ^ arg38 ^ var39) + var43
    var45 = (1741591133 & arg37 ^ -295) | -1262824473
    var46 = var39 & var45
    var47 = var41 + var43 | var40 + arg37
    var48 = var47 & var39 + var45 & arg37
    var49 = var41 | var41
    var50 = var43 ^ (var44 & var48 + var41)
    if var50 < var42:
        var51 = var41 & arg38 + (var46 ^ var46)
    else:
        var51 = 510 + var44 - (var50 | 517226919)
    var52 = (var40 ^ arg38 + var44) & var49
    var53 = var39 ^ var46
    var54 = var45 - var39
    var55 = var41 ^ var46 & 1608871408 | var47
    result = var50 - var54
    return result
def func7():
    func5()
    result = len(xrange(22))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -9
def func4(arg6, arg7):
    var8 = ((arg6 + -5) & arg6) - arg6
    var9 = ((var8 | 153) + -214990880) & arg6
    var10 = arg7 ^ -323 | arg7
    var11 = arg7 ^ var10
    var12 = (-580 | var10) & 886 | arg7
    if arg6 < var11:
        var13 = 231 & (-755268339 ^ var9) & -312
    else:
        var13 = arg7 ^ -953
    var14 = arg7 + arg6 & var10
    var15 = var10 & var9 ^ (-889714961 + var9)
    var16 = -594311414 - var10 + arg6 & var14
    var17 = arg7 ^ arg7 | arg6 - var14
    var18 = var12 - var15
    if var17 < var14:
        var19 = var14 + 1689846104
    else:
        var19 = ((var18 | arg7) & var18) | arg6
    var20 = var15 + 171
    var21 = (var18 & (var11 & var17)) | var20
    var22 = var14 | (arg7 + var17)
    var23 = var21 | (var8 ^ var15 | var15)
    var24 = (var8 + var21 - var10) & var17
    var25 = var23 & 399 - var16 + arg7
    var26 = (var11 - var14) + var8
    var27 = var15 ^ var14
    if var12 < var27:
        var28 = (var18 | (arg7 ^ var10)) | 341
    else:
        var28 = (var21 & var10) - 198
    var29 = arg7 & var21 & var24
    var30 = ((var21 ^ var20) - var20) | var15
    var31 = var24 ^ var21
    var32 = var22 + var26 & var14 - var15
    result = var9 - (((var18 | (((111 - var21) + var26) - var12 ^ var21) + var25 & var24) & var11) ^ var16 ^ var25)
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg35, arg36):
    def func9(acc, rest):
        var56 = func10(acc, 0)
        if acc == 0:
            return var56
        else:
            result = func9(acc - 1, var56)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var34 = func7()
    var57 = func8(arg2, var34)
    var62 = func11(var34, var33)
    var66 = func12(var57, arg2)
    var67 = -103 + var33 - -142
    var68 = arg2 - -294 + (var57 ^ 2064983795)
    var69 = (var57 + var67) + (arg1 - var57)
    var70 = var34 - 490 ^ var62 & var33
    if var66 < var33:
        var71 = 718 + var69
    else:
        var71 = var62 ^ var34 & arg1 - 1187900982
    var72 = var66 - arg2
    var73 = (var57 - var66) + var69
    var74 = var72 + (var73 - var34 & var62)
    var75 = var72 - (var69 + (-523 - var67))
    var76 = (var74 ^ var72 & var69) - var68
    var77 = arg2 + var75 + var73 | var69
    var78 = var68 & (var76 & 1917463999 | var75)
    var79 = var66 + arg1
    var80 = (var77 - var75) | var57 | 1788873333
    var81 = (var78 | 18216480) ^ var70 & var34
    var82 = arg2 - var69
    var83 = var81 - var68
    var84 = var72 ^ ((var69 | var82) ^ var79)
    var85 = var74 & (arg1 ^ arg1) & var69
    result = var80 | var82
    return result
def func12(arg63, arg64):
    var65 = 1857087469 ^ -2087536741 + (813 ^ arg63 & arg64)
    result = (-195 & (arg64 & arg63 | arg63) - (arg64 | var65) ^ arg63 ^ (var65 ^ 1055180672) | arg63 & 528) | -491659682
    return result
def func11(arg58, arg59):
    var60 = 0
    for var61 in range(27):
        var60 += var60 + 3 - arg58
    return var60
def func10(arg37, arg38):
    var39 = 2050293040 & ((arg37 | -1000) & 69175346)
    var40 = (var39 + arg38 | arg38) + arg38
    var41 = (1841286099 & var39 + var40) - -967
    var42 = var40 + arg37 + var41 | 283158509
    var43 = -1428131787 ^ (-887579024 | (arg37 & 884))
    var44 = (arg38 ^ arg38 ^ var39) + var43
    var45 = (1741591133 & arg37 ^ -295) | -1262824473
    var46 = var39 & var45
    var47 = var41 + var43 | var40 + arg37
    var48 = var47 & var39 + var45 & arg37
    var49 = var41 | var41
    var50 = var43 ^ (var44 & var48 + var41)
    if var50 < var42:
        var51 = var41 & arg38 + (var46 ^ var46)
    else:
        var51 = 510 + var44 - (var50 | 517226919)
    var52 = (var40 ^ arg38 + var44) & var49
    var53 = var39 ^ var46
    var54 = var45 - var39
    var55 = var41 ^ var46 & 1608871408 | var47
    result = var50 - var54
    return result
def func7():
    func5()
    result = len(xrange(22))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -9
def func4(arg6, arg7):
    var8 = ((arg6 + -5) & arg6) - arg6
    var9 = ((var8 | 153) + -214990880) & arg6
    var10 = arg7 ^ -323 | arg7
    var11 = arg7 ^ var10
    var12 = (-580 | var10) & 886 | arg7
    if arg6 < var11:
        var13 = 231 & (-755268339 ^ var9) & -312
    else:
        var13 = arg7 ^ -953
    var14 = arg7 + arg6 & var10
    var15 = var10 & var9 ^ (-889714961 + var9)
    var16 = -594311414 - var10 + arg6 & var14
    var17 = arg7 ^ arg7 | arg6 - var14
    var18 = var12 - var15
    if var17 < var14:
        var19 = var14 + 1689846104
    else:
        var19 = ((var18 | arg7) & var18) | arg6
    var20 = var15 + 171
    var21 = (var18 & (var11 & var17)) | var20
    var22 = var14 | (arg7 + var17)
    var23 = var21 | (var8 ^ var15 | var15)
    var24 = (var8 + var21 - var10) & var17
    var25 = var23 & 399 - var16 + arg7
    var26 = (var11 - var14) + var8
    var27 = var15 ^ var14
    if var12 < var27:
        var28 = (var18 | (arg7 ^ var10)) | 341
    else:
        var28 = (var21 & var10) - 198
    var29 = arg7 & var21 & var24
    var30 = ((var21 ^ var20) - var20) | var15
    var31 = var24 ^ var21
    var32 = var22 + var26 & var14 - var15
    result = var9 - (((var18 | (((111 - var21) + var26) - var12 ^ var21) + var25 & var24) & var11) ^ var16 ^ var25)
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg35, arg36):
    def func9(acc, rest):
        var56 = func10(acc, 0)
        if acc == 0:
            return var56
        else:
            result = func9(acc - 1, var56)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var34 = func7()
    var57 = func8(arg2, var34)
    var62 = func11(var34, var33)
    var66 = func12(var57, arg2)
    var67 = -103 + var33 - -142
    var68 = arg2 - -294 + (var57 ^ 2064983795)
    var69 = (var57 + var67) + (arg1 - var57)
    var70 = var34 - 490 ^ var62 & var33
    if var66 < var33:
        var71 = 718 + var69
    else:
        var71 = var62 ^ var34 & arg1 - 1187900982
    var72 = var66 - arg2
    var73 = (var57 - var66) + var69
    var74 = var72 + (var73 - var34 & var62)
    var75 = var72 - (var69 + (-523 - var67))
    var76 = (var74 ^ var72 & var69) - var68
    var77 = arg2 + var75 + var73 | var69
    var78 = var68 & (var76 & 1917463999 | var75)
    var79 = var66 + arg1
    var80 = (var77 - var75) | var57 | 1788873333
    var81 = (var78 | 18216480) ^ var70 & var34
    var82 = arg2 - var69
    var83 = var81 - var68
    var84 = var72 ^ ((var69 | var82) ^ var79)
    var85 = var74 & (arg1 ^ arg1) & var69
    result = var80 | var82
    return result
def func12(arg63, arg64):
    var65 = 1857087469 ^ -2087536741 + (813 ^ arg63 & arg64)
    result = (-195 & (arg64 & arg63 | arg63) - (arg64 | var65) ^ arg63 ^ (var65 ^ 1055180672) | arg63 & 528) | -491659682
    return result
def func11(arg58, arg59):
    var60 = 0
    for var61 in range(27):
        var60 += var60 + 3 - arg58
    return var60
def func10(arg37, arg38):
    var39 = 2050293040 & ((arg37 | -1000) & 69175346)
    var40 = (var39 + arg38 | arg38) + arg38
    var41 = (1841286099 & var39 + var40) - -967
    var42 = var40 + arg37 + var41 | 283158509
    var43 = -1428131787 ^ (-887579024 | (arg37 & 884))
    var44 = (arg38 ^ arg38 ^ var39) + var43
    var45 = (1741591133 & arg37 ^ -295) | -1262824473
    var46 = var39 & var45
    var47 = var41 + var43 | var40 + arg37
    var48 = var47 & var39 + var45 & arg37
    var49 = var41 | var41
    var50 = var43 ^ (var44 & var48 + var41)
    if var50 < var42:
        var51 = var41 & arg38 + (var46 ^ var46)
    else:
        var51 = 510 + var44 - (var50 | 517226919)
    var52 = (var40 ^ arg38 + var44) & var49
    var53 = var39 ^ var46
    var54 = var45 - var39
    var55 = var41 ^ var46 & 1608871408 | var47
    result = var50 - var54
    return result
def func7():
    func5()
    result = len(xrange(22))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -9
def func4(arg6, arg7):
    var8 = ((arg6 + -5) & arg6) - arg6
    var9 = ((var8 | 153) + -214990880) & arg6
    var10 = arg7 ^ -323 | arg7
    var11 = arg7 ^ var10
    var12 = (-580 | var10) & 886 | arg7
    if arg6 < var11:
        var13 = 231 & (-755268339 ^ var9) & -312
    else:
        var13 = arg7 ^ -953
    var14 = arg7 + arg6 & var10
    var15 = var10 & var9 ^ (-889714961 + var9)
    var16 = -594311414 - var10 + arg6 & var14
    var17 = arg7 ^ arg7 | arg6 - var14
    var18 = var12 - var15
    if var17 < var14:
        var19 = var14 + 1689846104
    else:
        var19 = ((var18 | arg7) & var18) | arg6
    var20 = var15 + 171
    var21 = (var18 & (var11 & var17)) | var20
    var22 = var14 | (arg7 + var17)
    var23 = var21 | (var8 ^ var15 | var15)
    var24 = (var8 + var21 - var10) & var17
    var25 = var23 & 399 - var16 + arg7
    var26 = (var11 - var14) + var8
    var27 = var15 ^ var14
    if var12 < var27:
        var28 = (var18 | (arg7 ^ var10)) | 341
    else:
        var28 = (var21 & var10) - 198
    var29 = arg7 & var21 & var24
    var30 = ((var21 ^ var20) - var20) | var15
    var31 = var24 ^ var21
    var32 = var22 + var26 & var14 - var15
    result = var9 - (((var18 | (((111 - var21) + var26) - var12 ^ var21) + var25 & var24) & var11) ^ var16 ^ var25)
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg35, arg36):
    def func9(acc, rest):
        var56 = func10(acc, 0)
        if acc == 0:
            return var56
        else:
            result = func9(acc - 1, var56)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var34 = func7()
    var57 = func8(arg2, var34)
    var62 = func11(var34, var33)
    var66 = func12(var57, arg2)
    var67 = -103 + var33 - -142
    var68 = arg2 - -294 + (var57 ^ 2064983795)
    var69 = (var57 + var67) + (arg1 - var57)
    var70 = var34 - 490 ^ var62 & var33
    if var66 < var33:
        var71 = 718 + var69
    else:
        var71 = var62 ^ var34 & arg1 - 1187900982
    var72 = var66 - arg2
    var73 = (var57 - var66) + var69
    var74 = var72 + (var73 - var34 & var62)
    var75 = var72 - (var69 + (-523 - var67))
    var76 = (var74 ^ var72 & var69) - var68
    var77 = arg2 + var75 + var73 | var69
    var78 = var68 & (var76 & 1917463999 | var75)
    var79 = var66 + arg1
    var80 = (var77 - var75) | var57 | 1788873333
    var81 = (var78 | 18216480) ^ var70 & var34
    var82 = arg2 - var69
    var83 = var81 - var68
    var84 = var72 ^ ((var69 | var82) ^ var79)
    var85 = var74 & (arg1 ^ arg1) & var69
    result = var80 | var82
    return result
def func12(arg63, arg64):
    var65 = 1857087469 ^ -2087536741 + (813 ^ arg63 & arg64)
    result = (-195 & (arg64 & arg63 | arg63) - (arg64 | var65) ^ arg63 ^ (var65 ^ 1055180672) | arg63 & 528) | -491659682
    return result
def func11(arg58, arg59):
    var60 = 0
    for var61 in range(27):
        var60 += var60 + 3 - arg58
    return var60
def func10(arg37, arg38):
    var39 = 2050293040 & ((arg37 | -1000) & 69175346)
    var40 = (var39 + arg38 | arg38) + arg38
    var41 = (1841286099 & var39 + var40) - -967
    var42 = var40 + arg37 + var41 | 283158509
    var43 = -1428131787 ^ (-887579024 | (arg37 & 884))
    var44 = (arg38 ^ arg38 ^ var39) + var43
    var45 = (1741591133 & arg37 ^ -295) | -1262824473
    var46 = var39 & var45
    var47 = var41 + var43 | var40 + arg37
    var48 = var47 & var39 + var45 & arg37
    var49 = var41 | var41
    var50 = var43 ^ (var44 & var48 + var41)
    if var50 < var42:
        var51 = var41 & arg38 + (var46 ^ var46)
    else:
        var51 = 510 + var44 - (var50 | 517226919)
    var52 = (var40 ^ arg38 + var44) & var49
    var53 = var39 ^ var46
    var54 = var45 - var39
    var55 = var41 ^ var46 & 1608871408 | var47
    result = var50 - var54
    return result
def func7():
    func5()
    result = len(xrange(22))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -9
def func4(arg6, arg7):
    var8 = ((arg6 + -5) & arg6) - arg6
    var9 = ((var8 | 153) + -214990880) & arg6
    var10 = arg7 ^ -323 | arg7
    var11 = arg7 ^ var10
    var12 = (-580 | var10) & 886 | arg7
    if arg6 < var11:
        var13 = 231 & (-755268339 ^ var9) & -312
    else:
        var13 = arg7 ^ -953
    var14 = arg7 + arg6 & var10
    var15 = var10 & var9 ^ (-889714961 + var9)
    var16 = -594311414 - var10 + arg6 & var14
    var17 = arg7 ^ arg7 | arg6 - var14
    var18 = var12 - var15
    if var17 < var14:
        var19 = var14 + 1689846104
    else:
        var19 = ((var18 | arg7) & var18) | arg6
    var20 = var15 + 171
    var21 = (var18 & (var11 & var17)) | var20
    var22 = var14 | (arg7 + var17)
    var23 = var21 | (var8 ^ var15 | var15)
    var24 = (var8 + var21 - var10) & var17
    var25 = var23 & 399 - var16 + arg7
    var26 = (var11 - var14) + var8
    var27 = var15 ^ var14
    if var12 < var27:
        var28 = (var18 | (arg7 ^ var10)) | 341
    else:
        var28 = (var21 & var10) - 198
    var29 = arg7 & var21 & var24
    var30 = ((var21 ^ var20) - var20) | var15
    var31 = var24 ^ var21
    var32 = var22 + var26 & var14 - var15
    result = var9 - (((var18 | (((111 - var21) + var26) - var12 ^ var21) + var25 & var24) & var11) ^ var16 ^ var25)
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func8(arg35, arg36):
    def func9(acc, rest):
        var56 = func10(acc, 0)
        if acc == 0:
            return var56
        else:
            result = func9(acc - 1, var56)
            return result
    result = func9(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
